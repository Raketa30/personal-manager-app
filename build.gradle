plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.unbroken-dome.xjc' version '1.4.3'
    id 'java'

}

group = 'ru.liga.manager'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
compileJava.options.encoding = 'UTF-8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
configurations {
    jaxb
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.flywaydb:flyway-core'

    // https://mvnrepository.com/artifact/org.apache.cxf/cxf-rt-wsdl
    implementation 'org.apache.cxf:cxf-rt-wsdl:3.5.2'

    // https://mvnrepository.com/artifact/javax.validation/validation-api
    implementation 'javax.validation:validation-api:2.0.1.Final'


    // implementation 'com.sun.xml.bind:jaxb-core:2.3.0'
    // implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

xjc {
    includeInMainCompilation = false
}

sourceSets {
    main { java { srcDir xjcGenerate.outputDirectory } }
}

task dockerComposeUp(type: Exec) {
    group = "quick-start"
    commandLine 'docker-compose', '-f', 'docker/docker-compose.yml', 'up', '--build', '-d'
    sleep(3000)
}

task quickStart(type: GradleBuild) {
    group = "quick-start"
    tasks = ['clean', 'bootJar', 'dockerComposeUp']
}





//tasks.named('test') {
////    useJUnitPlatform()
//}
